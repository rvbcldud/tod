name: rust-clippy analyze

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]   # PRs targeting main
  schedule:
    - cron: '21 11 * * 5'
  workflow_dispatch:

permissions:
  contents: read

# Prevent duplicate/overlapping runs per ref
concurrency:
  group: rust-clippy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust-clippy-analyze:
    # Skip PR jobs when the PR branch lives in this repo (push already covers it)
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    name: Run rust-clippy analyzing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read  # for upload-sarif in private repos to get run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Run rust-clippy
        run: |
          cargo clippy \
            --all-features \
            --message-format=json \
          | clippy-sarif \
          | tee rust-clippy-results.sarif \
          | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
